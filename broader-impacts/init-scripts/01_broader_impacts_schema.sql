-- =====================================================
-- Broader Impacts Tracking System - Schema
-- =====================================================
-- This schema tracks organizations, contacts, projects, and their broader impact categories
-- PostGIS is installed in the postgis schema by core Civic OS scripts and is accessible via search_path

-- =====================================================
-- CORE ENTITY TABLES
-- =====================================================

-- Organization Types (lookup table)
CREATE TABLE "public"."organization_types" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL UNIQUE,
	"description" TEXT
);

-- Organizations
CREATE TABLE "public"."organizations" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL,
	"organization_type_id" BIGINT NOT NULL,
	"address" TEXT,
	"phone" phone_number,
	"email" email_address,
	"website" TEXT,
	"description" TEXT
);

-- Contacts
CREATE TABLE "public"."contacts" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"first_name" TEXT NOT NULL,
	"last_name" TEXT NOT NULL,
	"display_name" TEXT GENERATED ALWAYS AS (first_name || ' ' || last_name) STORED,
	"email" email_address,
	"phone" phone_number,
	"organization_id" BIGINT,
	"title" TEXT,
	"description" TEXT
);

-- Project Statuses (lookup table)
CREATE TABLE "public"."project_statuses" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL UNIQUE,
	"description" TEXT
);

-- Interest Centers
CREATE TABLE "public"."interest_centers" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL,
	"description" TEXT
);

-- Projects
CREATE TABLE "public"."projects" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL,
	"description" TEXT,
	"organization_id" BIGINT NOT NULL,
	"interest_center_id" BIGINT,
	"start_date" DATE,
	"end_date" DATE,
	"status_id" BIGINT
);

-- Broader Impact Categories
CREATE TABLE "public"."broader_impact_categories" (
	"id" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	"updated_at" TIMESTAMP WITH TIME ZONE,
	"display_name" TEXT NOT NULL,
	"description" TEXT
);

-- =====================================================
-- JUNCTION TABLES (Many-to-Many Relationships)
-- =====================================================
-- These tables use composite primary keys and will be auto-detected as junction tables
-- and hidden from the menu. The M:M editor will appear on Detail pages.

-- Organizations <-> Broader Impact Categories
CREATE TABLE "public"."organization_broader_impact_categories" (
	"organization_id" BIGINT NOT NULL,
	"broader_impact_category_id" BIGINT NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	PRIMARY KEY (organization_id, broader_impact_category_id)
);

-- Contacts <-> Projects
CREATE TABLE "public"."contact_projects" (
	"contact_id" BIGINT NOT NULL,
	"project_id" BIGINT NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	PRIMARY KEY (contact_id, project_id)
);

-- Contacts <-> Broader Impact Categories
CREATE TABLE "public"."contact_broader_impact_categories" (
	"contact_id" BIGINT NOT NULL,
	"broader_impact_category_id" BIGINT NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	PRIMARY KEY (contact_id, broader_impact_category_id)
);

-- Projects <-> Broader Impact Categories
CREATE TABLE "public"."project_broader_impact_categories" (
	"project_id" BIGINT NOT NULL,
	"broader_impact_category_id" BIGINT NOT NULL,
	"created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
	PRIMARY KEY (project_id, broader_impact_category_id)
);

-- =====================================================
-- INDEXES
-- =====================================================

-- Unique indexes for primary keys
CREATE UNIQUE INDEX "organization_types_pkey" ON public."organization_types" USING btree (id);
CREATE UNIQUE INDEX "organizations_pkey" ON public."organizations" USING btree (id);
CREATE UNIQUE INDEX "contacts_pkey" ON public."contacts" USING btree (id);
CREATE UNIQUE INDEX "project_statuses_pkey" ON public."project_statuses" USING btree (id);
CREATE UNIQUE INDEX "interest_centers_pkey" ON public."interest_centers" USING btree (id);
CREATE UNIQUE INDEX "projects_pkey" ON public."projects" USING btree (id);
CREATE UNIQUE INDEX "broader_impact_categories_pkey" ON public."broader_impact_categories" USING btree (id);

-- Foreign key indexes (CRITICAL for performance and inverse relationships)
CREATE INDEX "idx_organizations_organization_type_id" ON public."organizations"(organization_type_id);
CREATE INDEX "idx_contacts_organization_id" ON public."contacts"(organization_id);
CREATE INDEX "idx_projects_organization_id" ON public."projects"(organization_id);
CREATE INDEX "idx_projects_interest_center_id" ON public."projects"(interest_center_id);
CREATE INDEX "idx_projects_status_id" ON public."projects"(status_id);

-- Junction table indexes (both FKs for efficient lookups in both directions)
CREATE INDEX "idx_org_bic_organization_id" ON public."organization_broader_impact_categories"(organization_id);
CREATE INDEX "idx_org_bic_category_id" ON public."organization_broader_impact_categories"(broader_impact_category_id);
CREATE INDEX "idx_contact_projects_contact_id" ON public."contact_projects"(contact_id);
CREATE INDEX "idx_contact_projects_project_id" ON public."contact_projects"(project_id);
CREATE INDEX "idx_contact_bic_contact_id" ON public."contact_broader_impact_categories"(contact_id);
CREATE INDEX "idx_contact_bic_category_id" ON public."contact_broader_impact_categories"(broader_impact_category_id);
CREATE INDEX "idx_project_bic_project_id" ON public."project_broader_impact_categories"(project_id);
CREATE INDEX "idx_project_bic_category_id" ON public."project_broader_impact_categories"(broader_impact_category_id);

-- =====================================================
-- PRIMARY KEY CONSTRAINTS
-- =====================================================

ALTER TABLE "public"."organization_types" ADD CONSTRAINT "organization_types_pkey" PRIMARY KEY USING INDEX "organization_types_pkey";
ALTER TABLE "public"."organizations" ADD CONSTRAINT "organizations_pkey" PRIMARY KEY USING INDEX "organizations_pkey";
ALTER TABLE "public"."contacts" ADD CONSTRAINT "contacts_pkey" PRIMARY KEY USING INDEX "contacts_pkey";
ALTER TABLE "public"."project_statuses" ADD CONSTRAINT "project_statuses_pkey" PRIMARY KEY USING INDEX "project_statuses_pkey";
ALTER TABLE "public"."interest_centers" ADD CONSTRAINT "interest_centers_pkey" PRIMARY KEY USING INDEX "interest_centers_pkey";
ALTER TABLE "public"."projects" ADD CONSTRAINT "projects_pkey" PRIMARY KEY USING INDEX "projects_pkey";
ALTER TABLE "public"."broader_impact_categories" ADD CONSTRAINT "broader_impact_categories_pkey" PRIMARY KEY USING INDEX "broader_impact_categories_pkey";

-- =====================================================
-- FOREIGN KEY CONSTRAINTS
-- =====================================================

-- Organizations foreign keys
ALTER TABLE "public"."organizations" ADD CONSTRAINT "organizations_organization_type_id_fkey"
  FOREIGN KEY (organization_type_id) REFERENCES organization_types(id) NOT VALID;
ALTER TABLE "public"."organizations" VALIDATE CONSTRAINT "organizations_organization_type_id_fkey";

-- Contacts foreign keys
ALTER TABLE "public"."contacts" ADD CONSTRAINT "contacts_organization_id_fkey"
  FOREIGN KEY (organization_id) REFERENCES organizations(id) NOT VALID;
ALTER TABLE "public"."contacts" VALIDATE CONSTRAINT "contacts_organization_id_fkey";

-- Projects foreign keys
ALTER TABLE "public"."projects" ADD CONSTRAINT "projects_organization_id_fkey"
  FOREIGN KEY (organization_id) REFERENCES organizations(id) NOT VALID;
ALTER TABLE "public"."projects" VALIDATE CONSTRAINT "projects_organization_id_fkey";

ALTER TABLE "public"."projects" ADD CONSTRAINT "projects_interest_center_id_fkey"
  FOREIGN KEY (interest_center_id) REFERENCES interest_centers(id) NOT VALID;
ALTER TABLE "public"."projects" VALIDATE CONSTRAINT "projects_interest_center_id_fkey";

ALTER TABLE "public"."projects" ADD CONSTRAINT "projects_status_id_fkey"
  FOREIGN KEY (status_id) REFERENCES project_statuses(id) NOT VALID;
ALTER TABLE "public"."projects" VALIDATE CONSTRAINT "projects_status_id_fkey";

-- Junction table foreign keys (with CASCADE delete for proper cleanup)
ALTER TABLE "public"."organization_broader_impact_categories" ADD CONSTRAINT "org_bic_organization_fkey"
  FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."organization_broader_impact_categories" VALIDATE CONSTRAINT "org_bic_organization_fkey";

ALTER TABLE "public"."organization_broader_impact_categories" ADD CONSTRAINT "org_bic_category_fkey"
  FOREIGN KEY (broader_impact_category_id) REFERENCES broader_impact_categories(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."organization_broader_impact_categories" VALIDATE CONSTRAINT "org_bic_category_fkey";

ALTER TABLE "public"."contact_projects" ADD CONSTRAINT "contact_projects_contact_fkey"
  FOREIGN KEY (contact_id) REFERENCES contacts(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."contact_projects" VALIDATE CONSTRAINT "contact_projects_contact_fkey";

ALTER TABLE "public"."contact_projects" ADD CONSTRAINT "contact_projects_project_fkey"
  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."contact_projects" VALIDATE CONSTRAINT "contact_projects_project_fkey";

ALTER TABLE "public"."contact_broader_impact_categories" ADD CONSTRAINT "contact_bic_contact_fkey"
  FOREIGN KEY (contact_id) REFERENCES contacts(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."contact_broader_impact_categories" VALIDATE CONSTRAINT "contact_bic_contact_fkey";

ALTER TABLE "public"."contact_broader_impact_categories" ADD CONSTRAINT "contact_bic_category_fkey"
  FOREIGN KEY (broader_impact_category_id) REFERENCES broader_impact_categories(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."contact_broader_impact_categories" VALIDATE CONSTRAINT "contact_bic_category_fkey";

ALTER TABLE "public"."project_broader_impact_categories" ADD CONSTRAINT "project_bic_project_fkey"
  FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."project_broader_impact_categories" VALIDATE CONSTRAINT "project_bic_project_fkey";

ALTER TABLE "public"."project_broader_impact_categories" ADD CONSTRAINT "project_bic_category_fkey"
  FOREIGN KEY (broader_impact_category_id) REFERENCES broader_impact_categories(id) ON DELETE CASCADE NOT VALID;
ALTER TABLE "public"."project_broader_impact_categories" VALIDATE CONSTRAINT "project_bic_category_fkey";

-- =====================================================
-- GRANT PERMISSIONS
-- =====================================================
-- Note: Admin role gets full CRUD, user/collaborator roles get read-only access
-- RLS policies in 02_broader_impacts_permissions.sql enforce this

-- Core entity tables
GRANT SELECT ON TABLE "public"."organization_types" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."organization_types" TO authenticated;

GRANT SELECT ON TABLE "public"."organizations" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."organizations" TO authenticated;

GRANT SELECT ON TABLE "public"."contacts" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."contacts" TO authenticated;

GRANT SELECT ON TABLE "public"."project_statuses" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."project_statuses" TO authenticated;

GRANT SELECT ON TABLE "public"."interest_centers" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."interest_centers" TO authenticated;

GRANT SELECT ON TABLE "public"."projects" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."projects" TO authenticated;

GRANT SELECT ON TABLE "public"."broader_impact_categories" TO web_anon, authenticated;
GRANT INSERT, UPDATE, DELETE ON TABLE "public"."broader_impact_categories" TO authenticated;

-- Junction tables (no UPDATE needed, only INSERT/DELETE for M:M relationships)
GRANT SELECT, INSERT, DELETE ON TABLE "public"."organization_broader_impact_categories" TO web_anon, authenticated;
GRANT SELECT, INSERT, DELETE ON TABLE "public"."contact_projects" TO web_anon, authenticated;
GRANT SELECT, INSERT, DELETE ON TABLE "public"."contact_broader_impact_categories" TO web_anon, authenticated;
GRANT SELECT, INSERT, DELETE ON TABLE "public"."project_broader_impact_categories" TO web_anon, authenticated;

-- =====================================================
-- GRANT SEQUENCE PERMISSIONS
-- =====================================================

GRANT USAGE ON SEQUENCE "public"."organization_types_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."organizations_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."contacts_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."project_statuses_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."interest_centers_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."projects_id_seq" TO web_anon, authenticated;
GRANT USAGE ON SEQUENCE "public"."broader_impact_categories_id_seq" TO web_anon, authenticated;

-- =====================================================
-- ENABLE ROW LEVEL SECURITY
-- =====================================================

ALTER TABLE "public"."organization_types" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."organizations" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."contacts" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."project_statuses" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."interest_centers" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."projects" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."broader_impact_categories" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."organization_broader_impact_categories" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."contact_projects" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."contact_broader_impact_categories" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."project_broader_impact_categories" ENABLE ROW LEVEL SECURITY;

-- =====================================================
-- TIMESTAMP TRIGGERS
-- =====================================================

-- organization_types triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."organization_types"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."organization_types"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- organizations triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."organizations"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."organizations"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- contacts triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."contacts"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."contacts"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- project_statuses triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."project_statuses"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."project_statuses"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- interest_centers triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."interest_centers"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."interest_centers"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- projects triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."projects"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."projects"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- broader_impact_categories triggers
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."broader_impact_categories"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_updated_at_trigger
  BEFORE INSERT OR UPDATE ON public."broader_impact_categories"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_updated_at();

-- Junction tables (only created_at triggers, no updated_at needed)
CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."organization_broader_impact_categories"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."contact_projects"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."contact_broader_impact_categories"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

CREATE TRIGGER set_created_at_trigger
  BEFORE INSERT ON public."project_broader_impact_categories"
  FOR EACH ROW
  EXECUTE FUNCTION public.set_created_at();

-- =====================================================
-- NOTIFY POSTGREST
-- =====================================================

NOTIFY pgrst, 'reload schema';
