services:
  postgres:
    build:
      context: ..
      dockerfile: docker/dev-postgres/Dockerfile
    platform: linux/amd64
    container_name: postgres_db
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mount Sqitch files for migrations
      - ../sqitch.conf:/civic-os-migrations/sqitch.conf:ro
      - ../sqitch.plan:/civic-os-migrations/sqitch.plan:ro
      - ../postgres/migrations:/civic-os-migrations/postgres/migrations:ro
      # Mount example-specific init scripts
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - postgrest-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5

  postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest_api
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: public,metadata
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_PRE_REQUEST: "public.check_jwt"
      PGRST_JWT_SECRET: "@/etc/postgrest/jwt-secret.jwks"
      PGRST_JWT_AUD: "account"
      PGRST_OPENAPI_SERVER_PROXY_URI: "http://localhost:3000"
      PGRST_LOG_LEVEL: "info"
    volumes:
      - ./jwt-secret.jwks:/etc/postgrest/jwt-secret.jwks:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgrest-network
    restart: unless-stopped

  # Optional: Swagger UI for API documentation
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger_ui
    ports:
      - "8080:8080"
    environment:
      API_URL: "http://postgrest:3000/"
    depends_on:
      - postgrest
    networks:
      - postgrest-network

  # Optional: Local Keycloak instance for RBAC testing
  # Uncomment this section to run Keycloak locally (recommended for testing roles/permissions)
  # See docs/AUTHENTICATION.md for complete setup instructions
  # keycloak:
  #   image: quay.io/keycloak/keycloak:24.0
  #   container_name: keycloak_server
  #   environment:
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #     KC_HEALTH_ENABLED: true
  #     KC_METRICS_ENABLED: true
  #   ports:
  #     - "8081:8080"  # Mapped to 8081 to avoid conflict with swagger-ui
  #   command: start-dev
  #   networks:
  #     - postgrest-network
  #   # Note: After starting Keycloak, access admin console at http://localhost:8081
  #   #       Login: admin / admin
  #   #       Follow docs/AUTHENTICATION.md to configure realm, client, and roles

volumes:
  postgres_data:
  init-scripts:

networks:
  postgrest-network:
    driver: bridge